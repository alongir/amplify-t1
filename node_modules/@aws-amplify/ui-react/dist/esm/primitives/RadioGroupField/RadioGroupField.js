import{__rest as e}from"tslib";import{jsxs as i,jsx as r}from"react/jsx-runtime";import*as s from"react";import a from"classnames";import{ComponentClassNames as l}from"../shared/constants.js";import"../Field/FieldClearButton.js";import{FieldDescription as d}from"../Field/FieldDescription.js";import{FieldErrorMessage as o}from"../Field/FieldErrorMessage.js";import{Flex as t}from"../Flex/Flex.js";import{Label as n}from"../Label/Label.js";import{VisuallyHidden as m}from"../VisuallyHidden/VisuallyHidden.js";import{RadioGroupContext as u}from"./context.js";import{getTestId as c}from"../utils/getTestId.js";import{useStableId as p}from"../utils/useStableId.js";const b=s.forwardRef(((b,f)=>{var{children:h,className:j,defaultValue:g,descriptiveText:F,errorMessage:R,hasError:v=!1,id:x,isDisabled:y,isRequired:O,isReadOnly:H,label:I,labelHidden:V=!1,labelPosition:E,onChange:G,name:M,size:N,testId:z,value:C}=b,D=e(b,["children","className","defaultValue","descriptiveText","errorMessage","hasError","id","isDisabled","isRequired","isReadOnly","label","labelHidden","labelPosition","onChange","name","size","testId","value"]);const P=p(x),T=p(),q=F?T:void 0,L=c(z,l.RadioGroup),w=s.useMemo((()=>({currentValue:C,defaultValue:g,hasError:v,isRequired:O,isReadOnly:H,isGroupDisabled:y,onChange:G,size:N,name:M,labelPosition:E})),[g,v,y,O,H,G,N,M,C,E]);return i(t,Object.assign({as:"fieldset",className:a(l.Field,l.RadioGroupField,j),"data-size":N,ref:f,role:"radiogroup",testId:z},D,{children:[r(m,Object.assign({as:"legend"},{children:I})),r(n,Object.assign({"aria-hidden":!0,visuallyHidden:V},{children:I})),r(d,{id:T,labelHidden:V,descriptiveText:F}),r(t,Object.assign({"aria-describedby":q,className:l.RadioGroup,id:P,testId:L},{children:r(u.Provider,Object.assign({value:w},{children:h}))})),r(o,{hasError:v,errorMessage:R})]}))}));b.displayName="RadioGroupField";export{b as RadioGroupField};
