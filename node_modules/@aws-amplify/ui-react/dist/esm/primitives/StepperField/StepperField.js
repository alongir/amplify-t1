import{__rest as e}from"tslib";import{jsxs as i,jsx as r}from"react/jsx-runtime";import*as s from"react";import t from"classnames";import{useStepper as a}from"./useStepper.js";import"../Field/FieldClearButton.js";import{FieldDescription as o}from"../Field/FieldDescription.js";import{FieldErrorMessage as l}from"../Field/FieldErrorMessage.js";import{FieldGroup as n}from"../FieldGroup/FieldGroup.js";import"../FieldGroupIcon/FieldGroupIcon.js";import{FieldGroupIconButton as d}from"../FieldGroupIcon/FieldGroupIconButton.js";import{Flex as p}from"../Flex/Flex.js";import{IconAdd as c}from"../Icon/icons/IconAdd.js";import{ComponentClassNames as u,ComponentText as m}from"../shared/constants.js";import"../View/View.js";import{IconRemove as b}from"../Icon/icons/IconRemove.js";import{Input as F}from"../Input/Input.js";import{Label as f}from"../Label/Label.js";import{classNameModifier as h,classNameModifierByFlag as j}from"../shared/utils.js";import{splitPrimitiveProps as I}from"../utils/splitPrimitiveProps.js";import{useStableId as S}from"../utils/useStableId.js";const v="decrease-icon",B="increase-icon",g=s.forwardRef(((v,B)=>{const{className:g,defaultValue:O,descriptiveText:D,errorMessage:y,hasError:C=!1,id:L,inputStyles:R,isDisabled:x,isReadOnly:E,isRequired:N,increaseButtonLabel:V=m.StepperField.increaseButtonLabel,decreaseButtonLabel:z=m.StepperField.decreaseButtonLabel,label:G,labelHidden:H=!1,onStepChange:M,size:$,testId:q,value:w,variation:P}=v,T=e(v,["className","defaultValue","descriptiveText","errorMessage","hasError","id","inputStyles","isDisabled","isReadOnly","isRequired","increaseButtonLabel","decreaseButtonLabel","label","labelHidden","onStepChange","size","testId","value","variation"]),k=S(L),W=S(),A=D?W:void 0,{styleProps:J,rest:K}=I(T),{step:Q,value:U,inputValue:X,handleDecrease:Y,handleIncrease:Z,handleOnBlur:_,handleOnChange:ee,handleOnWheel:ie,setInputValue:re,shouldDisableDecreaseButton:se,shouldDisableIncreaseButton:te}=a(Object.assign(Object.assign({},v),{defaultValue:O,onStepChange:M}));return s.useEffect((()=>{void 0!==w&&re(w)}),[w,re]),i(p,Object.assign({className:t(u.Field,h(u.Field,$),u.StepperField,g),"data-size":$,"data-variation":P,testId:q},J,{children:[r(f,Object.assign({htmlFor:k,visuallyHidden:H},{children:G})),r(o,{id:W,labelHidden:H,descriptiveText:D}),r(n,Object.assign({outerStartComponent:r(d,Object.assign({"aria-controls":k,ariaLabel:`${z} ${U-Q}`,className:t(u.StepperFieldButtonDecrease,h(u.StepperFieldButtonDecrease,P),j(u.StepperFieldButtonDecrease,"disabled",se)),"data-invalid":C,isDisabled:se,onClick:Y,size:$},{children:r(b,{"data-testid":"decrease-icon"})})),outerEndComponent:r(d,Object.assign({"aria-controls":k,ariaLabel:`${V} ${U+Q}`,className:t(u.StepperFieldButtonIncrease,h(u.StepperFieldButtonIncrease,P),j(u.StepperFieldButtonIncrease,"disabled",te)),"data-invalid":C,isDisabled:te,onClick:Z,size:$},{children:r(c,{"data-testid":"increase-icon"})}))},{children:r(F,Object.assign({"aria-describedby":A,className:u.StepperFieldInput,hasError:C,id:k,isDisabled:x,isReadOnly:E,isRequired:N,onBlur:_,onChange:ee,onWheel:ie,ref:B,size:$,variation:P,type:"number",value:X},R,K))})),r(l,{hasError:C,errorMessage:y})]}))}));g.displayName="StepperField";export{v as DECREASE_ICON,B as INCREASE_ICON,g as StepperField};
